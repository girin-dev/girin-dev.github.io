<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>기린개발의 일지</title>
  
  <subtitle>Girin-dev&#39;s development Blog.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://girin-dev.github.io/"/>
  <updated>2017-10-02T02:52:57.941Z</updated>
  <id>http://girin-dev.github.io/</id>
  
  <author>
    <name>Girin-dev</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>알고리즘 퀴즈 (JavaScript, 반복문, 쉬움)</title>
    <link href="http://girin-dev.github.io/2017/10/01/Algorithm-iteration-easy/"/>
    <id>http://girin-dev.github.io/2017/10/01/Algorithm-iteration-easy/</id>
    <published>2017-10-01T06:58:46.000Z</published>
    <updated>2017-10-02T02:52:57.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="조건에-맞는-수-출력-짝수-홀수"><a href="#조건에-맞는-수-출력-짝수-홀수" class="headerlink" title="조건에 맞는 수 출력(짝수, 홀수)"></a>조건에 맞는 수 출력(짝수, 홀수)</h2><ol><li><p>for문을 사용하여 0부터 10미만의 정수 중에서 짝수만을 작은 수부터 출력하시오.</p><ul><li>생각의 흐름: for문을 통해 1부터 10까지 값을 하나씩 얻어낸 후, if문을 활용해 각각의 값을 2로 나눈 나머지가 0인 값만을 선택해 출력한다.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</div><div class="line">  <span class="keyword">if</span> (i % <span class="number">2</span> === <span class="number">0</span>) &#123;</div><div class="line">    <span class="built_in">console</span>.log(i);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 2</span></div><div class="line"><span class="comment">// 4</span></div><div class="line"><span class="comment">// 6</span></div><div class="line"><span class="comment">// 8</span></div><div class="line"><span class="comment">// i를 0부터 시작할 경우 0이 출력되는 문제가 발생.</span></div><div class="line"><span class="comment">// i를 1부터 출력시키는 방법을 선택하였고, 0부터 출력시키게 한다면 if문과 continue; 를 통해 i = 0 인 경우 출력에서 제외시킬 수 있다.</span></div><div class="line"><span class="comment">// 이외에도 if (i % 2 === 1) continue; 를 통해 짝수가 아닌 수들을 제외하는 방향으로 진행할 수도 있다.</span></div></pre></td></tr></table></figure></li></ul></li><li><p>for문을 사용하여 0부터 10미만의 정수 중에서 짝수만을 작은 수부터 문자열로 출력하시오.</p><ul><li>생각의 흐름: str라는 변수명을 가진 변수에 빈 문자열을 할당. for문을 이용해 1부터 10미만의 수를 반복시켜 값을 하나씩 얻어낸 후, if문을 활용해 각각의 값을 2로 나눈 나머지가 0인 값을 선택해 str이라는 문자열에 하나씩 더해준다. 반복이 끝나면 str을 출력한다.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">''</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</div><div class="line">  <span class="keyword">if</span> (i % <span class="number">2</span> === <span class="number">0</span>) &#123;</div><div class="line">    str += i;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> str + <span class="string">': '</span> + str);</div><div class="line"><span class="comment">// string: 2468</span></div><div class="line"></div><div class="line"><span class="comment">// Number 자료형을 String 자료형으로 바꾸는 방법</span></div><div class="line"><span class="comment">// Number 자료형 변수 val</span></div><div class="line"><span class="comment">// 1. val + ''(빈 문자열), 본 문제에서 사용한 방식</span></div><div class="line"><span class="comment">// 2. val.toString();</span></div><div class="line"><span class="comment">// 3. String(val); String()은 형 변환을 위한 함수가 아니기 때문에 비추</span></div></pre></td></tr></table></figure></li></ul></li><li><p>for문을 사용하여 0부터 10미만의 정수 중에서 홀수만을 큰수부터 출력하시오.</p><ul><li>생각의 흐름: for문을 활용하여 9 부터 0 초과까지 1씩 빼면서 값을 하나하나 구해내어, 각각의 값을 2로 나눈 값이 0인 값만을 구해내 출력한다.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">9</span>; i &gt; <span class="number">0</span>; i--) &#123;</div><div class="line">  <span class="keyword">if</span> (i % <span class="number">2</span> === <span class="number">0</span>) &#123;</div><div class="line">    <span class="built_in">console</span>.log(i);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 9</span></div><div class="line"><span class="comment">// 7</span></div><div class="line"><span class="comment">// 5</span></div><div class="line"><span class="comment">// 3</span></div><div class="line"><span class="comment">// 1</span></div><div class="line"><span class="comment">// 수를 감소시키면서 반복 가능.</span></div></pre></td></tr></table></figure></li></ul></li><li><p>while문을 사용하여 0부터 10까지 정수 중에서 짝수만을 작은 수부터 출력하시오.</p><ul><li>생각의 흐름: 반복 변수 변수 i를 0으로 할당한다. while문을 활용하여 반복변수 i가 10을 넘기면 반복을 정지시키는 조건을 설정하고, 매 반복마다 i에 1씩을 더해간다. 그 i의 값이 2로 나누어 0이 되면 그때그떄 i를 출력한다.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;</div><div class="line">  i++;</div><div class="line">  <span class="keyword">if</span> (i % <span class="number">2</span> === <span class="number">0</span>) &#123;</div><div class="line">    <span class="built_in">console</span>.log(i);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 2</span></div><div class="line"><span class="comment">// 4</span></div><div class="line"><span class="comment">// 6</span></div><div class="line"><span class="comment">// 8</span></div><div class="line"><span class="comment">// 첫 시도때 n이라는 변수도 함꼐 설정하여 출력값과 반복변수값를 따로 분리해서 만들었다. 그러나 결국 i와 n의 값이 동일하게 진행되어 n을 지우고 출력값과 반복변수값을 합쳐 코드를 간소화하였다.</span></div></pre></td></tr></table></figure></li></ul></li><li><p>while문을 사용하여 0부터 10미만의 정수 중에서 홀수만을 큰수부터 출력하시오.</p><ul><li>생각의 흐름: 반복 변수 i를 0으로, 출력할 값을 받을 변수 n을 10으로 할당한다. while문을 활용하여 i가 10을 넘으면 반복을 멈추도록 조건을 설정한다. 매 반복마다 i는 1씩 증가시키고, n은 1씩 감소시킨다. 이때 n을 2로 나눈 나머지가 0인 값을 제외하고 나머지 값을 매 반복마다 출력한다.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> n = <span class="number">10</span>;</div><div class="line"><span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;</div><div class="line">  i++;</div><div class="line">  n--;</div><div class="line">  <span class="keyword">if</span> (n % <span class="number">2</span> === <span class="number">0</span>) <span class="keyword">continue</span>;</div><div class="line">  <span class="built_in">console</span>.log(n);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 9</span></div><div class="line"><span class="comment">// 7</span></div><div class="line"><span class="comment">// 5</span></div><div class="line"><span class="comment">// 3</span></div><div class="line"><span class="comment">// 1</span></div></pre></td></tr></table></figure></li></ul></li></ol><h2 id="조건에-맞는-합-구하기"><a href="#조건에-맞는-합-구하기" class="headerlink" title="조건에 맞는 합 구하기"></a>조건에 맞는 합 구하기</h2><ol><li><p>for 문을 사용하여 0부터 10미만의 정수의 합을 출력하시오</p><ul><li>생각의 흐름: sum_6의 값을 할당하지 않고, for문을 활용하여 i를 0부터 10미만까지 1씩 늘려가며 표현식을 반복한다. 표현식은 sum_6에 i값을 더해간다. 반복이 끝나면 sum_6을 출력한다.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> sum_6 = <span class="literal">null</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</div><div class="line">  sum_6 += i;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(sum_6);</div><div class="line"><span class="comment">// 0+1+2+3+4+5+6+7+8+9 = 45</span></div></pre></td></tr></table></figure></li></ul></li><li><p>1부터 20까지의 정수 중에서 2 또는 3의 배수가 아닌 수의 총합을 구하시오.</p><ul><li>생각의 흐름: sum_7의 값을 할당하지 않고, for문을 활용하여 i를 0부터 20이하까지 1씩 늘려가며 표현식을 반복한다. 표현식은 sum_7에 i값을 더해가는데, 이때 i의 값이 2 또는 3의 배수일 때 값을 제외한다. 반복을 끝내고 sum_7을 형식에 맞게 출력한다.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> sum_7 = <span class="literal">null</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">20</span>; i++) &#123;</div><div class="line">  <span class="keyword">if</span> (i % <span class="number">3</span> === <span class="number">0</span> || i % <span class="number">2</span> === <span class="number">0</span>) <span class="keyword">continue</span>;</div><div class="line">  sum_7 += i</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'최종합: '</span> + sum_7);</div><div class="line"><span class="comment">// 0+1+5+7+11+13+17+19</span></div><div class="line"><span class="comment">// 최종합: 73</span></div></pre></td></tr></table></figure></li></ul></li><li><p>1부터 20까지의 정수 중에서 2 또는 3의 배수인 수의 총합을 구하시오.</p><ul><li>생각의 흐름: sum_8의 값을 할당하지 않고, for문을 활용하여 i를 0부터 20이하까지 1씩 늘려가며 표현식을 반복한다. 표현식은 sum_7에 i값을 더해가는데, 이때 i의 값이 2 또는 3의 배수일 때 값만을 더해간다. 반복을 끝내고 sum_8을 형식에 맞게 출력한다.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> sum_8 = <span class="literal">null</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">20</span>; i++) &#123;</div><div class="line">  <span class="keyword">if</span> (i % <span class="number">3</span> === <span class="number">0</span> || i % <span class="number">2</span> === <span class="number">0</span>) &#123;</div><div class="line">    sum_8 += i</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'최종합: '</span> + sum_8);</div></pre></td></tr></table></figure></li></ul></li></ol><h2 id="주사위-두-눈-연산"><a href="#주사위-두-눈-연산" class="headerlink" title="주사위 두 눈 연산"></a>주사위 두 눈 연산</h2><ol><li>두 개의 주사위를 던졌을 때, 눈의 합이 6이 되는 모든 경우의 수를 출력하시오.<ul><li>생각의 흐름<ol><li><strong>내가 접근한 방식</strong>: for문을 활용하여 반복 변수 dice_a과 dice_b를 각각 1부터 6이하 까지 반복한다. 이중 for문을 활용하여 dice_a의 각 값마다 dice_b의 모든 값을 비교할 수 있게 하여 그 합을 sum이라는 변수에 담는데 sum이 6이 되었을 때만 출력한다. 예를 들어 dice_a가 1일 때, dice_b의 1~6까지 각각의 값을 모두 더해보고 그 값이 6일 때 그 값만을 출력하게 하는 것이다.</li><li><strong>배열을 활용한 방법</strong>: 변수 dice_a와 dice_b에 각각에 [1, 2, 3, 4, 5, 6]이라는 배열을 할당한다. 반복 변수 i를 0부터 6미만까지(배열 내 순서는 0부터 시작) 1씩 증가시키며 반복하고 1번의 방법과 마찬가지로 이중 for문을 활용해 dice_a의 i번째 값을 dice_b의 모든 값(반복변수j)과 합쳐보고 그 값이 6이 되면 출력한다. <strong>배열을 활용한 것이지만 생각의 흐름은 1번과 거의 비슷하다.</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 1. 내가 접근한 방식</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> dice_a = <span class="number">1</span>; dice_a &lt;= <span class="number">6</span>; dice_a++) &#123;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> dice_b = <span class="number">1</span>; dice_b &lt;= <span class="number">6</span>; dice_b++) &#123;</div><div class="line">    <span class="keyword">var</span> sum = dice_a + dice_b</div><div class="line">    <span class="keyword">if</span> (sum === <span class="number">6</span>) &#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'(A '</span> + dice_a + <span class="string">', '</span> + dice_b + <span class="string">' B)'</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">// (A 1, 5 B)</span></div><div class="line"><span class="comment">// (A 2, 4 B)</span></div><div class="line"><span class="comment">// (A 3, 3 B)</span></div><div class="line"><span class="comment">// (A 4, 2 B)</span></div><div class="line"><span class="comment">// (A 5, 1 B)</span></div><div class="line"></div><div class="line"><span class="comment">// 2. 배열을 활용한 방법</span></div><div class="line">dice_a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</div><div class="line">dice_b = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++) &#123;</div><div class="line">    <span class="keyword">if</span> (dice_a[i] + dice_b[j] === <span class="number">6</span>) &#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'(A '</span> + dice_a[i] + <span class="string">', '</span> + dice_b[j] + <span class="string">' B)'</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">// (A 1, 5 B)</span></div><div class="line"><span class="comment">// (A 2, 4 B)</span></div><div class="line"><span class="comment">// (A 3, 3 B)</span></div><div class="line"><span class="comment">// (A 4, 2 B)</span></div><div class="line"><span class="comment">// (A 5, 1 B)</span></div></pre></td></tr></table></figure></li></ol></li></ul></li></ol><h2 id="로-삼각형-출력하기"><a href="#로-삼각형-출력하기" class="headerlink" title="*로 삼각형 출력하기"></a><code>*</code>로 삼각형 출력하기</h2><ol><li><p>삼각형 출력하기</p><ul><li>생각의 흐름</li></ul><ol><li><strong>for문과 매 반복마다 <code>console.log()</code>을 활용한 방법</strong>: sum_10을 빈 문자열로 할당한다. 반복 변수 i를 0부터 5 미만까지 1씩 증가시켜 반복해 표현식을 수행한다. 표현식은 sum_10에 매 반복마다 문자열 <code>*</code>을 더해주고 sum_10을 출력한다.</li><li><strong>이중 for문으로 매 반복마다 <code>*</code>을 더하는 방법</strong>: sum_10을 빈 문자열로 할당한다. 이중 for문을 활용하여 i를 0부터 5미만까지 1씩 증가시켜 반복하고 내부 for문은 반복 변수 r은 0부터 (i+1) 미만까지 1씩 증가시켜 반복한다. 내부 for문의 표현식을 sum_10에 <code>*</code>을 더해준다. i의 값에 따라 <code>*</code>의 반복 갯수를 결정해주는 방식이다.</li><li><strong>while문을 활용하는 방법</strong></li><li><strong>repeat() 함수를 활용하는 방법</strong></li><li><strong>switch를 활용한 방법</strong>: 배운 것을 활용해 봄.</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 1. for문과 매 반복마다 `console.log()`을 활용한 방법</span></div><div class="line"><span class="keyword">var</span> sum_10 = <span class="string">''</span>;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</div><div class="line">  sum_10 += <span class="string">'*'</span>;</div><div class="line">  <span class="built_in">console</span>.log(sum_10);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 2. 이중 for문으로 매 반복마다 `*`을 더하는 방법</span></div><div class="line"><span class="keyword">var</span> sum_10 = <span class="string">''</span>;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</div><div class="line">  <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; i + <span class="number">1</span>; r++) &#123;</div><div class="line">    sum_10 += <span class="string">'*'</span>;</div><div class="line">  &#125;</div><div class="line">  sum_10 += <span class="string">'\n'</span></div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(sum_10);</div><div class="line"></div><div class="line"><span class="comment">// 3. while문을 활용하는 방법</span></div><div class="line"><span class="keyword">var</span> c = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> result_10 = <span class="string">''</span>;</div><div class="line"><span class="keyword">while</span> (c &lt; <span class="number">5</span>) &#123;</div><div class="line">  c++;</div><div class="line">  result_10 += <span class="string">'*'</span>;</div><div class="line">  <span class="built_in">console</span>.log(result_10);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 4. repeat() 함수를 활용하는 방법</span></div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'*'</span>.repeat(i));</div><div class="line">&#125;</div><div class="line"><span class="comment">// [반복시키고자 하는 값].repeat([반복시키고자 하는 횟수])</span></div><div class="line"></div><div class="line"><span class="comment">// 5. switch를 활용한 방법</span></div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  <span class="keyword">switch</span> (i) &#123;</div><div class="line">    <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'*'</span>);</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'**'</span>);</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'***'</span>);</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'****'</span>);</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">default</span>:</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'*****'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 모두 다음과 같이 출력</span></div><div class="line"><span class="comment">// *</span></div><div class="line"><span class="comment">// **</span></div><div class="line"><span class="comment">// ***</span></div><div class="line"><span class="comment">// ****</span></div><div class="line"><span class="comment">// *****</span></div></pre></td></tr></table></figure></li><li><p>트리 출력하기</p><ul><li>생각의 흐름</li></ul><ol><li><strong>while문과 이중 for문을 동시에 사용하여 for문 2개를 단순나열을 해소하는 방법</strong>: for문을 이용해 i가 2부터 5이하까지 반복하여 i가 홀수인 경우에만 다음 방법을 수행한다. 다음 방법은 변수 n을 0으로 할당하고 sum_11을 빈 문자열로 할당한다. 또한 n이 i값 이하일때만 실행시키는 while문을 작성하고 이떄 n은 1씩 증가시키고 sum_11에 <code>*</code>를 더해나간 후 바로 sum_11을 출력한다.</li><li><strong>1번 방법을 도출하기 전 단계의 방법</strong>: 1번과 동일.</li><li><strong>for문 2개를 단순나열하는 방법</strong></li><li><strong>제일님 방법</strong>: for문을 활용하여 1~5까지 별을 합하여 출력시키는데 중간에 반복변수 i가 3일 때 한번 출력시키는 방법.</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 1. while문과 이중 for문을 동시에 사용하여 for문의 단순나열을 해소하는 방법(2번 방법의 간소화)</span></div><div class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  <span class="keyword">if</span> (i % <span class="number">2</span> !== <span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">var</span> n = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> sum_11 = <span class="string">''</span>;</div><div class="line">    <span class="keyword">while</span> (n &lt; i) &#123;</div><div class="line">      n++;</div><div class="line">      sum_11 += <span class="string">'*'</span></div><div class="line">      <span class="built_in">console</span>.log(sum_11);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 2. 1번 방법을 도출하기 전 단계의 방법</span></div><div class="line"><span class="comment">// for문에서 원하는 숫자값을 도출해서 그 1부터 그 숫자값까지의 별의 갯수를 출력해주는 방식</span></div><div class="line"><span class="comment">// 이럴거면 반복문을 왜 썼나 싶은 생각이 드는 방식</span></div><div class="line"><span class="keyword">var</span> sum_11_3 = <span class="string">''</span>;</div><div class="line"><span class="keyword">var</span> sum_11_5 = <span class="string">''</span>;</div><div class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> m = <span class="number">0</span>;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  <span class="keyword">if</span> (i % <span class="number">2</span> !== <span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">while</span> (n &lt; i) &#123;</div><div class="line">      n++;</div><div class="line">      sum_11_3 = <span class="string">'*'</span>.repeat(n);</div><div class="line">      <span class="built_in">console</span>.log(sum_11_3);</div><div class="line">    &#125;</div><div class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i === <span class="number">5</span>) &#123;</div><div class="line">    <span class="keyword">while</span> (m &lt; i) &#123;</div><div class="line">      m++;</div><div class="line">      sum_11_5 = <span class="string">'*'</span>.repeat(m);</div><div class="line">      <span class="built_in">console</span>.log(sum_11_5);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 3. for문 2개를 단순나열하는 방법</span></div><div class="line"><span class="keyword">var</span> sum_11_3 = <span class="string">''</span>;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</div><div class="line">  sum_11_3 += <span class="string">'*'</span>;</div><div class="line">  <span class="built_in">console</span>.log(sum_11_3);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> sum_11_5 = <span class="string">''</span>;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  sum_11_5 += <span class="string">'*'</span>;</div><div class="line">  <span class="built_in">console</span>.log(sum_11_5);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 4. 제일님 방법</span></div><div class="line"><span class="keyword">var</span> starCount = <span class="string">''</span>;</div><div class="line"><span class="keyword">var</span> starSum = <span class="string">''</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  starCount += <span class="string">'*'</span>;</div><div class="line">  starSum += starCount + <span class="string">'\n'</span>;</div><div class="line">  <span class="keyword">if</span> (i === <span class="number">3</span>) &#123;</div><div class="line">    <span class="built_in">console</span>.log(starSum);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(starSum);</div></pre></td></tr></table></figure></li><li><p>정삼각형 출력하기</p><ul><li>생각의 흐름</li></ul><ol><li><strong>for문과 2개의 내부 for문을 활용해 더해가는 방법</strong>: for문을 이용하여 반복변수 i를 1부터 5 이하까지 1씩 증가시키며 두 개의 내부 for문을 반복한다. 첫 for문은 반복변수 z를 0부터 (5-i)까지 1씩 증가시키면서 빈 칸 ‘ ‘을 더해간다. (5-i)미만까지 증가시키는 것이기 때문에 i값이 늘어날수록 ‘ ‘의 수는 줄어든다. 다음 for문은 반복변수 x를 0부터 (2<em>i-1)미만까지 1씩 증가시킨다. i의 값이 커질수록 `</em><code>의 수는 늘어난다. 이때 중요한 것이 외부 for문을 반복할떄마다</code>*`과 ‘ ‘을 더해 할당하는 변수 tree를 빈 값으로 할당하는 일종의 ‘초기화’ 과정이 필요하다는 것이다.</li><li><strong><code>repeat()</code> 함수를 활용한 방법</strong>: <code>repeat()</code> 함수를 사용하면 for문을 반복할 필요없이 간소하게 만들 수 있다.</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 1. 3개의 for문을 활용하여 빈 칸의 수는 줄어들고 `*`은 늘어나게 하는 방법</span></div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  <span class="keyword">var</span> tree = <span class="string">''</span>;</div><div class="line">  <span class="keyword">for</span> (z = <span class="number">0</span>; z &lt; <span class="number">5</span> - i; z++) &#123;</div><div class="line">    tree += <span class="string">' '</span></div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; <span class="number">2</span> * i - <span class="number">1</span>; x++) &#123;</div><div class="line">    tree += <span class="string">'*'</span></div><div class="line">  &#125;</div><div class="line">    <span class="built_in">console</span>.log(tree);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 2. repeat() 함수 활용한 방법</span></div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  <span class="keyword">var</span> space = <span class="string">' '</span>;</div><div class="line">  <span class="keyword">var</span> star = <span class="string">'*'</span>;</div><div class="line">  <span class="built_in">console</span>.log(space.repeat(<span class="number">5</span> - i) + star.repeat(<span class="number">2</span> * i - <span class="number">1</span>) + space.repeat(<span class="number">5</span> - i));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//     *</span></div><div class="line"><span class="comment">//    ***</span></div><div class="line"><span class="comment">//   *****</span></div><div class="line"><span class="comment">//  *******</span></div><div class="line"><span class="comment">// *********</span></div></pre></td></tr></table></figure></li><li><p>역-정삼각형 출력하기</p><ul><li>생각의 흐름</li></ul><ol><li><strong>for문과 2개의 내부 for문을 활용해 더해가는 방법</strong>: 12번의 방식을 활용하되, 빈 칸과 <code>*</code>을 만들어 줄 반복문의 반복 범위 설정에 주의한다. 이 방법은 함수화가 되지 않는 방식으로, 함수화가 되는 방식을 고민해야한다.</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 1. for문과 2개의 내부 for문을 활용해 더해가는 방법</span></div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</div><div class="line">  <span class="keyword">var</span> tree = <span class="string">''</span>;</div><div class="line">  <span class="keyword">for</span> (x = <span class="number">1</span>; x &lt; i; x++) &#123;</div><div class="line">    tree += <span class="string">' '</span></div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span> (z = <span class="number">0</span>; z &lt; <span class="number">10</span> - (<span class="number">2</span> * i - <span class="number">1</span>); z++) &#123;</div><div class="line">    tree += <span class="string">'*'</span></div><div class="line">  &#125;</div><div class="line">  <span class="built_in">console</span>.log(tree);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// *********</span></div><div class="line"><span class="comment">//  *******</span></div><div class="line"><span class="comment">//   *****</span></div><div class="line"><span class="comment">//    ***</span></div><div class="line"><span class="comment">//     *</span></div></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;조건에-맞는-수-출력-짝수-홀수&quot;&gt;&lt;a href=&quot;#조건에-맞는-수-출력-짝수-홀수&quot; class=&quot;headerlink&quot; title=&quot;조건에 맞는 수 출력(짝수, 홀수)&quot;&gt;&lt;/a&gt;조건에 맞는 수 출력(짝수, 홀수)&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="Algorithm quiz" scheme="http://girin-dev.github.io/categories/Algorithm-quiz/"/>
    
    
      <category term="Algorithm quiz" scheme="http://girin-dev.github.io/tags/Algorithm-quiz/"/>
    
  </entry>
  
  <entry>
    <title>170930~171001-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/30/170930-171001-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/30/170930-171001-TIL/</id>
    <published>2017-09-30T13:22:29.000Z</published>
    <updated>2017-10-02T02:50:28.166Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li>반복문 함수 마무리 후 제출<ul><li><a href="https://girin-dev.github.io/2017/10/01/Algorithm-iteration-easy/">알고리즘 퀴즈 (JavaScript, 반복문, 쉬움)</a> 정리</li><li>함수화 마무리 후 제출</li></ul></li><li>주말~추석 과제 및 복습<ul><li>하루에 최소 2개 파트씩 정리</li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>해야할 과제가 많기 떄문에 추석에도 노트북을 가져가야 할 것 같다. 인쇄를 해가면 더 좋았을텐데 어차피 .md파일로 저장해야 하니까 노트북을 아예 갖고 가야겠다.</li><li>Angular와 Angular2의 차이가 뭘까 궁금해서 검색해봤더니 Angular는 ES5를 활용하고 Angular2는 Typescript를 활용한 방식이라고 한다.</li></ul><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li>Angular와 Angular2<ul><li><a href="http://www.sbeenlife.com/22" target="_blank" rel="external">http://www.sbeenlife.com/22</a> (특징 등에 대한 여러 차이점)</li><li><a href="https://hackya.com/kr/angular-angular2-%EA%B7%B8%EB%A6%AC%EA%B3%A0-typescript/" target="_blank" rel="external">https://hackya.com/kr/angular-angular2-%EA%B7%B8%EB%A6%AC%EA%B3%A0-typescript/</a> (이 글은 댓글을 통해 논쟁이 오가고 있으며 내용에 대해서 논란이 있는 듯 하다.)</li></ul></li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>11.Scope, 12.this 복습 및 정리</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;반복문 함수 마무리 후 제출&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://girin-d
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170929-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/29/170929-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/29/170929-TIL/</id>
    <published>2017-09-29T08:00:08.000Z</published>
    <updated>2017-10-01T06:44:29.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>Activity</p><ul><li><a href="https://github.com/march23hare/FDS6Triangle" target="_blank" rel="external"><code>*</code> 역-정삼각형 만들기 함수화 풀이</a><ul><li><code>반복문</code>을 활용한 풀이</li><li><code>재귀함수</code>를 활용한 풀이</li></ul></li><li><code>Git</code> fork 뜬 레포를 원본 레포로 최신화하는 방법<ul><li>fork 뜬 레포를 직접 최신화하는 방법은 없음.</li><li>로컬 영역에 clone 뜬 디렉토리를 원본 레포로 pull 받아 fork 뜬 레포로 push 하는 방법이 있음<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="built_in">cd</span> [fork 뜬 레포를 pull 받은 로컬 디렉토리]</div><div class="line"></div><div class="line"><span class="comment"># 로컬 디렉토리에 원본 레포를 연결 후 pull</span></div><div class="line">&gt; git remote add upstream [원본 레포 주소]</div><div class="line">&gt; git pull upstream [브랜치명]</div><div class="line"></div><div class="line"><span class="comment"># 최신화 된 로컬 디렉토리를 fork 뜬 레포로 push</span></div><div class="line">&gt; git push origin master</div></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>JavaScript</p><ul><li>프로토타입과 객체지향(Prototype)<ul><li>프로토타입 객체</li><li>[[Prototype]] 프로퍼티 vs prototype 프로퍼티</li><li>constructor 프로퍼티</li><li>Prototype chain</li><li>프로토타입 객체의 확장</li><li>기본자료형(Primitive data type)의 확장</li><li>프로토타입 객체의 변경</li><li>포로토타입 체인 동작 조건</li></ul></li><li>Scope<ul><li>Global scope</li><li>Non block-level scope</li><li>Function scope</li><li>암묵적 전역 (implied globals)</li><li>Lexical scoping (Static scoping)</li><li>변수명의 중복</li><li>최소한의 전역변수 사용</li><li>즉시실행함수를 이용한 전역변수 사용 억제</li></ul></li><li>this<ul><li>함수 호출 패턴과 this 바인딩</li><li>함수 호출 패턴(Function Invocation Pattern)</li><li>메소드 호출 패턴(Method Invocation Pattern)</li><li>생성자 호출 패턴(Constructor Invocation Pattern)<ul><li>생성자 함수 동작 방식</li><li>객체 리터럴 방식과 생성자 함수 방식의 차이</li><li>생성자 함수에 new 연산자를 붙이지 않고 호출할 경우</li></ul></li><li>apply 호출 패턴(Apply Invocation Pattern)</li></ul></li></ul></li><li>프로그래머 소양<ul><li>진짜 실력은 버그가 발생했을 때 문제를 해결하는 능력</li><li>자기가 짠 코드의 작동 원리를 모르면 절대 해결할 수 없음</li><li>JavaScript built-in은 기본이고 Deepdive도 지속적 공부 필요.</li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>this 부분이 특히 어려워서 복습이 필수인 것 같다.</li><li>prototype 부분은 처음엔 어려웠는데 한번 이해가 되니 기억도 잘나고 효과도 직접 설명할 수 있을 것 같다. this도 이럴 수 있도록 복습하자.</li><li>추석 연휴동안 그동안 챙기지 못했던 부분과 정리하지 못했던 부분을 챙기고, 전체적인 복습을 하자.</li><li>개발은 노력을 배신하지 않는 분야인 것 같다.</li></ul><h2 id="주말동안-할-일"><a href="#주말동안-할-일" class="headerlink" title="주말동안 할 일"></a>주말동안 할 일</h2><ul><li>반복문 함수 마무리 후 제출</li><li>주말, 추석 과제 및 복습</li><li>poiemweb 인쇄 알아보기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Activity&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170928-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/28/170928-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/28/170928-TIL/</id>
    <published>2017-09-28T01:18:19.000Z</published>
    <updated>2017-10-02T02:25:08.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li>Activity<ul><li>CLI 명령어</li></ul></li><li>채용정보<ul><li>중요한 건 <code>이론</code>과 <code>기본지식</code> =&gt; 왜 이렇게 쓰는가?<ul><li>AWS, Git &amp; Github, HTTP, RESTful AP<ul><li>아니 적어도 풀네임 정도라도 알자.</li></ul></li><li>언어 / 환경 / 구조(앵귤러?리엑트? 뭘 써봤으며 왜 그걸 썼니?) /</li><li><strong>Webpack</strong>, Grunt, Gulp, Browserify 도구 경험</li><li>협업능력: 나의 요구사항, 상대의 요구사항을 잘 이해하고 반영할 수 있는가? 문서 작성, 주석 등…</li></ul></li><li>개발자에게 질문하는 법<ul><li><a href="https://www.kjwon15.net/wordpress/articles/free/517" target="_blank" rel="external">국문</a></li><li><a href="https://codingkilledthecat.wordpress.com/2012/06/26/how-to-ask-for-programming-help/" target="_blank" rel="external">영문</a></li></ul></li></ul></li><li>JavaScript<ul><li>객체(Object)<ul><li>객체란?</li><li><strong>객체 생성 방법</strong><ol><li>객체 리터럴</li><li><code>Objcet()</code> 생성자 함수</li><li>생성자 함수</li></ol></li><li>객체 프로퍼티 접근</li><li>pass-by-reference</li><li>pass-by-value</li><li>객체의 분류</li></ul></li><li>함수 (Function)<ul><li>함수 정의</li><li><strong>함수 생성 방법 (중요)</strong><ol><li>함수 선언식</li><li>함수 표현식</li><li><code>Function()</code> 생성자 함수</li></ol></li><li>함수 호이스팅</li><li>First-class object(일급객체)</li><li>매개변수(parameter, 인자)</li><li>반환값</li><li>함수 객체의 프로퍼티</li><li>함수의 다양한 형태</li></ul></li><li><strong><code>Prototype</code></strong> 맛보기</li></ul></li><li>반복문 예제 13문<ul><li><code>*</code> 역-정삼각형 만들기</li><li>예제 12번, 13번을 함수화하기</li></ul></li><li>예습<ul><li>Prototype</li><li>Scope</li><li>this</li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>개발자로의 취업에 있어서 가장 중요한 건 <code>코딩테스트</code>와 <code>면접</code>. 이를 위해서 이론 공부가 필수적이다. 예전에는 ‘그냥 만들면 되는거 아냐?’, ‘포트폴리오 잘 만들면 그게 곧 실력이지’ 라고 생각했는데 현실은 전혀 달랐던 것 같다. 생각하면 할수록 컴공 부전공을 하지 않은게 후회된다. 하지만 지금이라도 열심히 해야지.</li><li><code>Prototype</code> 부분이 이해가 안가서 팀원 선화님과 계속 서로 설명해가면서 이해하려 노력했고, 최종적으로 선생님의 설명을 들었을때 서로의 대화가 유익했다는 것을 깨달았다. 개발자들끼리 소통하고 정보를 공유하는 것이 실력향상과 개념이해에도 좋은 영향을 끼치는 것 같다.</li><li>별로 역-정삼각형을 만다는 것은 이미 지난 수요일(27일)에 완성했으나 이것을 함수화하는 것은 또 차원이 다른 문제였다. 아예 생성원리를 다시 고민해서 새로 코딩을 해야 한다.</li><li>스쿨 멤버들과 치킨을 먹었다. 선생님과 조교님도 함께 먹었는데 정작 이걸 주도한 매니저님은 못 오셔서 아쉬웠다.</li><li>지금은 JavaScript를 하는데도 시간이 모자란다. Vue.js나 마크업css는 주말로 옮기고, 오히려 여유가 조금 생기면 알고리즘 문제를 하루에 하나씩이라도 풀어봐야겠다.</li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li><code>*</code> 역-정삼각형 만들기 함수화 풀이</li><li>예습하고 복습 및 정리</li><li>과제</li><li>주말과 추석 계획 세우기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Activity&lt;ul&gt;
&lt;li&gt;CLI 명령어&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;채용
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170927-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/27/170927-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/27/170927-TIL/</id>
    <published>2017-09-27T10:08:12.000Z</published>
    <updated>2017-09-27T18:18:04.010Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li>커맨드 라인 연습<ul><li>장고걸스 튜토리얼: <a href="https://tutorial.djangogirls.org/ko/intro_to_command_line/" target="_blank" rel="external">커맨드라인 시작하기</a></li><li><code>whoami</code> 사용자 이름 출력</li><li><code>rm -r [폴더명]</code> 폴더(디렉토리) 삭제</li><li><code>cp</code> 파일 복사</li><li><code>mv</code> 파일 이동</li><li>명령어 모음 <a href="https://ss64.com" target="_blank" rel="external">https://ss64.com</a></li></ul></li><li>JavaScript<ul><li>반복문 활용 문제 13개 풀이 및 발표</li><li>7~10과 예습<ul><li>Object</li><li>Immutability</li><li>Function-level</li><li>Prototye</li></ul></li><li>4~6과 복습</li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>같은 학생들끼리 알고리즘을 푸는 시간이 무척 즐거웠다. 따로 알고리즘 스터디를 하고 싶을 정도이다. 물론 때마침 토요일 스터디를 모집하는 글이 뜨긴 했는데, 토요일에 시간이 날지 모르겠어서 일단은 유보중… 스쿨 내에서 자바스크립트에 집중하는 알고리즘 스터디를 해보는 것도 좋겠다.</li><li>첫 self-study 시간과 미션 시간을 보냈는데, 굉장히 만족스러웠다.</li><li>같은 학생들끼리 점심도 먹고 커피도 마시면서 간단한 네트워킹 시간을 가질 수 있었다. 도시락을 먹는 것도 좋은데 종종 이런 시간도 가질 필요가 있겠다. 마침 내일은 치킨을 먹는다고 하니 더 친해지고 많은 정보를 공유하고 싶다.</li><li>맥북을 <code>high sierra</code>로 업데이트 했다. git관련 명령어가 잘 먹지 않아서 검색해보니 <code>Xcode Command Line Tools</code> 의존성 이슈가 발생하는 경우라고 한다. 예전에 <code>OS X El Capitan</code>에서 <code>macOS Sierra</code> 업데이트할 때도 이런 일이 있었다던데 매 업데이트마다 신경써줘야 하는 것 같다. (<a href="http://redutan.github.io/2015/10/05/osx-after-update-git-error" target="_blank" rel="external">http://redutan.github.io/2015/10/05/osx-after-update-git-error</a>)</li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>반복문 활용 알고리즘 문제 13개 풀이</li><li>복습과 예습</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;커맨드 라인 연습&lt;ul&gt;
&lt;li&gt;장고걸스 튜토리얼: &lt;a href=&quot;https://tu
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 04. 자료형과 변수(Data type &amp; Variable)</title>
    <link href="http://girin-dev.github.io/2017/09/26/JavaScript-04/"/>
    <id>http://girin-dev.github.io/2017/09/26/JavaScript-04/</id>
    <published>2017-09-26T10:32:37.000Z</published>
    <updated>2017-10-02T02:41:03.673Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript-04-자료형과-변수-Data-type-amp-Variable"><a href="#JavaScript-04-자료형과-변수-Data-type-amp-Variable" class="headerlink" title="JavaScript 04. 자료형과 변수(Data type &amp; Variable)"></a>JavaScript 04. 자료형과 변수(Data type &amp; Variable)</h1><ul><li>프로그래밍이란<br><strong>변수</strong>를 통해 값을 저장, 참조하고<br><strong>연산자</strong>로 값을 연산, 평가하고<br><strong>조건문과 반복문</strong>에 의한 흐름제어로 데이터 흐름을 제어하고<br><strong>함수</strong>로 재사용이 가능한 구문의 집합을 만들며<br><strong>객체, 배열</strong> 등으로 자료를 구조화하는 것  </li><li>변수<ul><li>변수에 값을 할당한다는 것은 OS가 값을 저장하기 위해 메모리 공간을 확보하는 것을 말한다. JavaScript의 경우 <code>undefined</code>라는 변수값을 통해 확보하는데 이를 초기화라고 한다.</li><li>결국 변수라는 것은 값이 할당된 메모리의 주소(Memory address)에 접근하기 위해 사람이 이해할 수 있는 언어로 지정한 이름표(식별자, identifier). 실제 위치틑 0x00…. 식의 16진수 숫자로 나타난다.</li></ul></li><li>변수값 할당과 재할당<ul><li>할당 : <code>undefined</code>로 할당되어 있던 메모리 위치를 다른 위치에 할당한 변수값의 위치로 가르키게 함 (참조). 이때 <code>undefined</code>는 바로 사라지지 않고 적절한 때에 삭제됨(<a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Memory_Management" target="_blank" rel="external">가비지 콜렉션</a></li><li>재할당 : 기존에 할당된 값을 바꾸는 것이 아니라 다른 위치에 값을 입력하고 그 위치로 재할당하는 것(참조를 바꿈)</li><li>변경불가한 값에 해당(immutable value)</li></ul></li><li>자료형은 이러한 변수를 할당할 때, 값의 종류에 따라 확보해야할 메모리 크기가 다르기 때문에 나타나는 분류이다.</li></ul><h2 id="기본자료형-Primitive-Data-Type"><a href="#기본자료형-Primitive-Data-Type" class="headerlink" title="기본자료형 (Primitive Data Type)"></a>기본자료형 (Primitive Data Type)</h2><ul><li>변경 불가능한 값(immutable value)</li><li><strong>pass-by-value</strong><br>값은 값으로 복사되어 전달되지, 변경되지 않는다.</li></ul><ol><li><code>boolean</code><br><code>true</code>/<code>false</code> 두 가지 값을 가질 수 있고<br><code>null</code>, <code>undefined</code>, 숫자 0은 <code>false</code>로 간주된다.</li><li><code>null</code><br>오직 <code>null</code> 값만을 갖는다. <code>null</code> 값은 참조정보를 제거한다, 변수값이 할당되어 있는 메모리 주소를 제거한다 정도의 의미. 참조가 없어진 메모리 영역은 마찬가지로 가비지 콜렉션 수행.</li><li><code>undefined</code><br>값이 할당되지 않은 변수가 가진 값. 선언되었으나 할당이 되지 않았을 경우.</li><li><code>Number</code><br>JavaScript는 오로지 하나의 숫자 자료형만 존재.<br><code>+/- Infinity</code>, <code>NaN</code>을 포함</li><li><code>String</code><br>문자열 타입으로 텍스트 데이터 사용.<br><strong>유사배열</strong> 로서 인덱스를 통해 접근가능하나 변경할 수 없고 오직 read만 가능하다.</li><li><code>Symbol</code><br>ES6에 새롭게 추가된 자료형으로 애플리케이션 전체에서 유일하며 변경 불가능한(immutable) 기본 자료형(primitive)이다. 주로 객체의 프로퍼티 키(property key)로 사용한다.</li></ol><h2 id="객체형-Object-type-참조형"><a href="#객체형-Object-type-참조형" class="headerlink" title="객체형 (Object type, 참조형)"></a>객체형 (Object type, 참조형)</h2><ul><li>객체는 데이터와 그 데이터에 관련되는 동작(절차,방법,기능)을 모두 포함할 수 있는 개념적 존재.</li><li>프로퍼티(property, 이름과 값을 갖는 데이터)와 메소드(method, 동작을 의미)를 포함하는 독립적 주체</li><li><strong>pass-by-reference</strong></li></ul><h2 id="변수"><a href="#변수" class="headerlink" title="변수"></a>변수</h2><ul><li>변수명 명명규칙<ul><li>목적과 기능에 맞고 알아보기 쉽게 짓기</li><li>대소문자 구분 가능 주의</li><li>첫글자는 영문자(특수문자 제외), underscore ( _ ), 또는 달러 기호($)만 가능</li></ul></li><li>변수의 중복 선언<ul><li>사용 가능하다 비추.</li></ul></li><li>변수 선언시 var 생략 허용<ul><li>사용가능하지만 의도치 않게 변수를 전역화할 수 있음. 비추.</li></ul></li><li>동적 타이핑 (Dynamic Typing)<ul><li>변수의 타입설정이 필요없이 할당되는 과정에서 자동으로 자료형이 결정되는 구조.</li></ul></li><li>변수 호이스팅(Variable Hoisting)<ul><li>변수 선언의 3단계<ol><li>선언 단계 (VO(variable object)에서 이루어짐)</li><li>초기화 단계</li><li>할당 단계</li></ol></li><li>선언단계와 초기화단계는 한번에 이루어짐. 이 단계는 한줄한줄 읽어가면서 var을 만날 때 하는것이 아니라 자바스크립트 전체 문서를 쫙 읽은 다음에 변수 선언문을 싹 뽑아서 이 단계를 실행한 뒤 한줄한줄 읽어나간다. 이것이 변수 호이스팅.</li><li>변수 선언문의 위치가 별로 중요하지 않으나 가급적 변수 이용문(?) 보다 위에, 그리고 문서 맨 위에 위치시키는 것이 좋다. 이것은 ESLint의 규칙이기도 하다.</li></ul></li><li>var 키워드로 선언된 변수의 문제점<ul><li>Function-level scope, var 생략 허용, 중복 선언 허용, 변수 호이스팅 등 JavaScript의 특징이 전역 변수의 남발, 의도치 않은 변수값 변경 등의 문제를 발생시킴.</li><li>복잡성, 성능이슈, 상호의존성 등 여러 면에서 변수의 범위는 좁을수록 좋다. 전역변수는 남발하지 말 것.</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JavaScript-04-자료형과-변수-Data-type-amp-Variable&quot;&gt;&lt;a href=&quot;#JavaScript-04-자료형과-변수-Data-type-amp-Variable&quot; class=&quot;headerlink&quot; title=&quot;Java
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://girin-dev.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://girin-dev.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>170926-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/26/170926-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/26/170926-TIL/</id>
    <published>2017-09-26T09:27:47.000Z</published>
    <updated>2017-09-27T18:19:25.846Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>Activity</p><ul><li>터미널 명령어 학습<br><code>.</code> 현재 디렉토리<br><code>..</code> 상위(부모) 디렉토리<br><code>../..</code> 상위(부모)의 상위 디렉토리<br><code>~</code> (물결 tilde) 루트 디렉토리<br><code>pwd</code> (present working directory) 현재 디렉토리 표시<br><code>[명령어] --help</code> 명령어의 도움말 정보 표시<br><code>cat [파일명]</code> 해당 파일 보기<br><code>cat [파일1] &gt; [파일2]</code> 파일 1의 내용을 그대로 복사하여 파일2 만들기<br><code>man [명령어]</code> 해당 명령어의 메뉴얼 보기(–help와 비슷)</li></ul></li><li><p>JavaScript</p></li><li><a href="https://girin-dev.github.io/2017/09/26/JavaScript-04/">자료형과 변수 (Data type &amp; Variable)</a><ul><li>기본자료형 (Primitive Data Type)</li><li>객체형 (Object type, 참조형)</li><li>변수</li></ul></li><li>연산자(Operator)<ul><li>산술 연산자 (Arithmetic Operators)</li><li>대입 연산자 (Assignment Operators)</li><li>비교 연산자 (Comparison Operators)</li><li>논리 연산자 (Logical Operators)</li><li>단축 평가 (Short-Circuit Evaluation)</li><li>타입 연산자 (Type Operators)</li><li>!!</li></ul></li><li><p>제어문(Control Flow)</p><ul><li>블록 구문 (Block statement)</li><li>조건문 (Conditional statement)</li><li>반복문 (Loop)</li><li>평가(Evaluating)]</li></ul></li><li><p>유용한 플러그인</p><ul><li>auto rename</li><li>Beautify</li><li>bookmark</li><li>code runner (ctrl+alt+n)</li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Activity&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;터미널 명령어 학습&lt;br&gt;&lt;code&gt;.&lt;/
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170925-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/25/170925-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/25/170925-TIL/</id>
    <published>2017-09-25T08:08:10.000Z</published>
    <updated>2017-09-26T01:31:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li>Scrum</li><li>JavaScript<ul><li><a href="http://poiemaweb.com/coding" target="_blank" rel="external">Coding!</a><ul><li>프로그래밍 언어:</li><li>0과 1과 연산 이 세 가지로 모든 것을 해내는 컴퓨터</li></ul></li><li><a href="http://poiemaweb.com/js-introduction" target="_blank" rel="external">Introduction!</a><ul><li>자바스크립트의 개요와 역사</li><li>EMCAScript6</li></ul></li><li><a href="http://poiemaweb.com/js-syntax-basics" target="_blank" rel="external">Syntax Basics</a><ul><li>HTML에서 JavaScript 실행하기</li><li>브라우저 동작원리</li><li><code>&lt;script&gt;</code>의 위치 중요성</li><li><code>&lt;script async src=&quot;&quot;&gt;</code>, <code>&lt;script defer src=&quot;&quot;</code>의 기능과 차이(ie9이하 지원x)</li><li>구문, 표현식, 변수, 값, 연산자, 키워드, 주석</li></ul></li><li><a href="http://poiemaweb.com/eslint" target="_blank" rel="external">ESlint 설치</a><ul><li>JavaScript 코드 점검을 해주는 플러그인</li><li>ESLint 공식 사이트 <a href="https://eslint.org/" target="_blank" rel="external">https://eslint.org/</a></li><li>ESLint 설치법 <a href="http://poiemaweb.com/eslint" target="_blank" rel="external">http://poiemaweb.com/eslint</a></li></ul></li></ul></li><li>예습<ul><li><a href="http://poiemaweb.com/js-data-type-variable" target="_blank" rel="external">Data type &amp; Variable</a><ul><li>가비지 콜렉션</li><li>호이스팅</li></ul></li><li><a href="http://poiemaweb.com/js-operator" target="_blank" rel="external">Operator</a></li><li><a href="http://poiemaweb.com/js-control-flow" target="_blank" rel="external">Control Flow</a></li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>무엇보다 중요한 것은 기초</li><li>포트폴리오보다는 코딩실력과 입사시험 대비</li><li>자바스크립트로 크로스플랫폼 앱제작이 가능하다는게 놀랍다. <a href="https://electron.atom.io/" target="_blank" rel="external">일렉트론</a>, <a href="http://ionicframework.com/docs/v1/guide/preface.html" target="_blank" rel="external">아이오닉</a> 기회가 되면 공부해보고 싶다. 일렉트론은 인플런에도 관련 강좌가 있다.</li><li>예습, 복습을 철저히 하자. 입시공부하듯!</li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>예습 &amp; 복습</li><li>코딩퀴즈 풀어보기(1문제)</li><li>Vue.js 30분</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Scrum&lt;/li&gt;
&lt;li&gt;JavaScript&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170923~170924-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/23/170923-170924-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/23/170923-170924-TIL/</id>
    <published>2017-09-23T04:21:23.000Z</published>
    <updated>2017-10-01T06:44:31.547Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><a href="https://www.facebook.com/groups/botgroup/permalink/677725575757942/" target="_blank" rel="external">주말에 끝내는 챗봇</a> 참석<ul><li>챗봇에 대한 간략한 정보와 챗봇을 개발, 배포할 수 있는 Azure Bot Framework 소개</li><li>챗봇을 사용하는 스타트업들<ul><li>날씨 알림형: <a href="https://www.facebook.com/hiponcho/" target="_blank" rel="external">판초(pancho)</a></li><li>개인별 추천형: H&amp;M, Skyscanner, <a href="https://www.kayak.co.kr/messenger" target="_blank" rel="external">카약</a></li><li>공공기관형, GS Shop 등 홈쇼핑, <a href="http://verticalplatform.kr/archives/7944" target="_blank" rel="external">조이의 채널서비스</a></li></ul></li><li>챗봇의 형식<ol><li>사용자 인풋을 받아 스크립트 처리 후 echo (분노 챗봇 새새)</li><li>자연어 처리를 통해 사용자 의도(intent) 파악 후 대답 (Jill Watson 수업 조교 봇)</li><li>단순한 Q&amp;A (쇼핑몰과 카페 등 소규모 사업장)</li></ol></li><li>좋은 봇의 기준<ol><li>최소한의 단계로 사용자의 문제를 해결하는가?</li><li>대체 경험보다 더 낫고 빠르고 쉽게 사용자의 문제를 해결하는가? (트리구조는 안 좋은 예시)</li><li>사용자가 자연스럽게 그 봇을 사용할 때 무엇을 해야하는지 알고 있는가? (봇이 사전에 알려주는 방법이 있음)</li></ol></li><li><a href="https://dev.botframework.com/" target="_blank" rel="external">Azure Bot Framework</a><ul><li>웹 소스를 제공하여 타 웹사이트에 <code>&lt;iframe&gt;</code>을 이용해 부착 가능</li><li>서버 구축은 C#이나 Node.js를 통해 지원</li></ul></li><li><a href="https://www.luis.ai/home" target="_blank" rel="external">LUIS</a><ul><li>Language Understanding Intelligent Service</li><li>MS에서 만든 자연어 처리 API</li></ul></li><li>참고 사이트<ul><li>챗봇 개발의 이해 <a href="http://jincrom.tistory.com/61" target="_blank" rel="external">http://jincrom.tistory.com/61</a></li><li>챗봇 개발의 생태계 <a href="https://brunch.co.kr/@pilsogood/2" target="_blank" rel="external">https://brunch.co.kr/@pilsogood/2</a></li></ul></li></ul></li><li>Vue.js<ul><li>상-하위 컴포넌트 간 데이터 전달 방법(Parent-Child 컴포넌트 통신)</li><li>Props</li><li>Event Bus</li><li>Component - Props - For</li></ul></li><li>HTML&amp;CSS 복습</li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>주말에 끝내는 챗봇<ul><li>챗봇이라는 세계를 처음 만났다. 의외로 많은 사람들이 사용하고 있는 서비스였고 최근 인공지능의 등장과 함께 시너지효과도 일으킬 수 있는 유망있는 세계인 것 같다. 신세계를 만난 기분이었다. 특히 고인을 그대로 챗봇으로 만들어 소통한다는 걸 본 것은 무척 기이한 경험었다.</li><li>그러나 컨퍼런스 자체는 주제와 타겟이 불명확했다. 챗봇에 대한 설명인지, 개발하는 방법을 알려주는건지, 아니면 그냥 Azure를 홍보하는건지 알 수 없었다. 또 청자가 개발자면 개발자, 사업자면 사업자, 학생이면 학생이어야 할텐데 모든 사람들이 짬뽕되어 특히 구체적인 깊은 개발 이야기가 나올때 아마 많은 사람들이 이해하지 못했을 것 같다.</li><li>2차 컨퍼런스는 실제 개발을 할 거라고 하는데.. 갈지 말지 고민된다. 사실 혼자 공부해서 개발할 수도 있을 것 같은데.. 딱히 Azure Bot Framework가 메리트 있는지도 모르겠고…</li></ul></li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>패캠강의 복습 및 정리</li><li>왓챠와 디에디트 진행</li><li>Vue.js 강의</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/botgrou
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170922-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/22/170922-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/22/170922-TIL/</id>
    <published>2017-09-22T09:16:51.000Z</published>
    <updated>2017-09-26T09:30:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>Fastcampus  </p><ul><li>Activity</li><li><p>HTML &amp; CSS</p><ul><li><code>position: sitcky</code> (ie11 미지원, 여러 브라우저 부분적 지원)</li><li>polyfil<br>우회적으로 적용하는 방법이라는 뜻. 보통 스크립트를 활용.</li><li><p><code>transform: rotate([0~360]deg);</code></p><ul><li>요소 회전시키기<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.div</span> &#123;</div><div class="line">  <span class="comment">/*(+)시계방향, (-)반시계방향*/</span></div><div class="line">  <span class="comment">/*시계방향 90도 회전*/</span></div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(90deg);</div><div class="line">  <span class="comment">/* 회전기준점을 좌측 하단으로 설정 */</span></div><div class="line">  <span class="attribute">transform-origin</span>: bottom left;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul></li><li><p>반응형 웹디자인 예제 완성</p></li><li>HTML &amp; CSS 수업 종료</li></ul></li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>HTML &amp; CSS 수업 종료<ul><li>김데레사님의 2주동안의 강의는 정말 만족스러웠다. 실습시간이 부족했던 것이 조금 걸리지만 코스의 특성상 어쩔 수 없는 측면도 있었을 것 같다. 배운 것을 바탕으로 HTML과 CSS는 스스로 공부하는 수 밖에 없다.</li><li>줄어든 HTML&amp;CSS만큼 JavaScript가 늘었으니 더 열심히 해야겠다.</li><li>HTML&amp;CSS도 매일 꾸준히 복습, 공부 해야지</li></ul></li></ul><h2 id="주말동안-할-일"><a href="#주말동안-할-일" class="headerlink" title="주말동안 할 일"></a>주말동안 할 일</h2><ul><li>패캠강의 복습 및 정리</li><li>이전 과제 분석</li><li>Vue.js 강의</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fastcampus  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity&lt;/li&gt;
&lt;li&gt;&lt;
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170921-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/21/170921-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/21/170921-TIL/</id>
    <published>2017-09-21T09:36:18.000Z</published>
    <updated>2017-09-22T00:42:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>Fastcampus</p><ul><li>Activity<ul><li>자습: 일과계획 정리, 블로그 SEO 정보 검색</li></ul></li><li><p>HTML &amp; CSS</p><ul><li><p><code>&lt;video&gt;</code> 태그</p><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/HTML/Element/Video" target="_blank" rel="external">레퍼런스 문서</a><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">class</span>=<span class="string">"responsive"</span> <span class="attr">controls</span> <span class="attr">poster</span>=<span class="string">"media/poster.jpg"</span> <span class="attr">preload</span>=<span class="string">"none"</span> <span class="attr">width</span>=<span class="string">"800"</span> <span class="attr">height</span>=<span class="string">"448"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"media/google-developer-stories.webm"</span> <span class="attr">type</span>=<span class="string">"video/webm; codecs=&amp;quot;vp8, vorbis&amp;quot;"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">track</span> <span class="attr">src</span>=<span class="string">"media/video-subtitles-en.vtt"</span> <span class="attr">kind</span>=<span class="string">"captions"</span> <span class="attr">srclang</span>=<span class="string">"en"</span> <span class="attr">label</span>=<span class="string">"English captions"</span> <span class="attr">default</span>=<span class="string">""</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></div></pre></td></tr></table></figure></li></ul></li><li><p>CSS 문서 작성시 우선적으로 해줘야 할 것</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 인코딩 설정과 css 문서에서 사용할 외부 요소 import(폰트, user agent style 무력화 등) */</span></div><div class="line">@<span class="keyword">charset</span> <span class="string">"utf-8"</span></div><div class="line">@import url(<span class="string">"./normalize.css"</span>)</div></pre></td></tr></table></figure></li><li><p><code>transform: translateX(-50%)</code>: 자신의 박스에서 x축으로 50% 안쪽(중간)을 기준으로 삼는다.</p></li></ul></li><li><p>반응형 웹 디자인(모바일, 유동적)</p><ul><li>반응형을 정답이 아니라 여러 방법 중 하나. 대규모 프로젝트의 경우 모바일/데스크탑 웹사이트를 따로 만드는게 더 좋을 수 있음(유지보수와 성능이슈)</li><li>Mostlyfluid, Offcanvas 등 <a href="https://sir.kr/pb_lecture/205#vc_b_unequal" target="_blank" rel="external">다양한 레이아웃 구성 참고</a></li><li>미디어쿼리<ul><li><code>@media only all and (조건문) {실행문}</code></li><li>화면크기, 기기스크린, 가로세로모드 등 다양한 기준으로 분기 설정 가능(보통 min-width, max-width)</li><li><a href="http://naradesign.net/wp/2012/05/30/1823/" target="_blank" rel="external">CSS3 미디어쿼리 이해 - naradesign</a></li></ul></li><li><p><code>background</code></p><ul><li>css를 통해 이미지를 배경처리하여 집어넣는 방법 (때때로 이미지 배경이나 장식을 마크업으로 처리하는게 유리할 떄도 있다. 이때 <code>alt=&quot;&quot;</code>로 주는 걸 잊지 말자.)</li><li>반응형 디자인에서는 박스 사이즈에 따라 이미지의 크기도 변동되어야 한다.</li><li><code>contain</code>과 <code>cover</code><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.div</span> &#123;</div><div class="line"><span class="attribute">background</span>: orange <span class="built_in">url</span>(<span class="string">"images/logo.png"</span>) no-repeat <span class="number">0</span> <span class="number">0</span>/[<span class="number">100%</span> <span class="number">100%</span> / cover / contain 중 택<span class="number">1</span>];</div><div class="line">&#125;</div><div class="line"><span class="comment">/* cover는 가로 기준으로 채우기, contain은 세로 기준으로 채우기 */</span></div></pre></td></tr></table></figure></li></ul></li><li><p>Golden Grid System</p><ul><li>2, 4, 6, 8, 12, 24 column으로 나누는 grid 시스템</li></ul></li><li>한 css 문서 내에서 분기하는 내부분기와 css 파일을 분리하여 분기하는 외부분기. 외부분기는 복수의 css파일을 다 불러온다는 점 때문에 성능과 속도가 저하되어 내부분기를 선호. 그러나 대규모 프로젝트에서는 유지보수 관리 등의 이유로 외부분기를 쓰기도 한다.</li><li>그러나 사실 그 정도의 대규모 프로젝트라면 애초에 유동형 웹디자인을 하기 보다 모바일용과 데스크탑용 웹을 따로 만든다.</li><li><code>RWD</code>와 <code>AWD</code><ul><li><code>RWD</code>: Responsible Web Design. 미디어쿼리를 활용해 화면이나 기기스크린의 크기 등을 이용해 화면 분기, 대개 모바일~테블릿~데스크탑 등 유동적으로 나타남.</li><li><code>AWD</code>: Adaptive Web Design. 서버 등에서 접속환경, 기기 등을 파악하여 이를 통해 화면 분기. 보통 모바일 / 데스크탑 등으로 구분되어 나타남.</li></ul></li></ul></li><li>반응형 이미지 이슈와 해결방안<ul><li>이슈<ol><li>성능/속도 및 대역폭</li><li>고해상도 디스플레이 등장</li><li>아트 디렉션 처리</li><li>다양한 이미지 포맷 대응</li></ol></li><li>해결방안<ol><li><code>srcset</code>과 <code>src</code> 속성 활용</li><li><code>&lt;picture&gt;</code>태그 활용(ie11 미지원)</li><li><code>@media only screen and (min-device-pixel-ratio:2)</code></li></ol></li></ul></li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>오픈소스 기여<ul><li>처음으로 기술 레퍼런스 오픈소스에 기여해봤다. MDN web docs의 <a href="https://developer.mozilla.org/ko/docs/Web/HTML/Element/Video" target="_blank" rel="external"><code>&lt;video&gt;</code> 태그 레퍼런스</a>에 번역 중 실수로 지워지지 않은 영문을 삭제했고, 몇몇 부분을 원문 어감에 맞게 수정했다. 별 건 아니지만 반영되면 좋겠다. 기술적 기여를 하고 싶다.</li></ul></li><li>비록 내가 짠 코드는 아니었지만, CSS를 꾸미기 전에 마크업 구조파악을 하고 시작하는 습관을 들이자.</li><li><a href="https://www.facebook.com/nomadcoders/videos/1359489667496998" target="_blank" rel="external">React의 라이센스와 관련한 영상</a>을 한 편 보았다. 요지는 비록 페북이 저작권 소송을 하는 것은 맞지만 저작권 문제에 대해 걱정할 필요가 없다는 것이다. 우선 대개의 개발자들이 속한 회사가 페북과 소송전을 벌일 정도로 거대한 회사가 아니고, 만약 그 정도로 거대한 회사라면 기술력이 받쳐줄테니 그때 React를 다른 기술로 바꾸면 된다는 것이다. 따라서 그냥 열심히 공부하면 된다고 한다. 맞는 말인 것 같다. 그러나 여러 글이나 사람들의 말을 보면 프레임워크, 라이브러리 간에 경쟁이 정말 있는 것 같다는 생각은 든다. 내가 공부할 Angular2나 React, Vue.js 등 다양한 기술들을 옹호하거나 비판하는 사람들은 지천에 널렸다. 어느 기술이나 쉽게 터득할 수 있는 개발자가 되어야겠다.</li><li>iOS11과 watchOS4로 업데이트했다. 왠만하면 최신 OS는 바로바로 업데이트하려고 노력한다. 여러가지 흥미로운 점이 많았는데 우선 접근성을 중시하는 웹의 정신처럼 장애인과 여성 등 다양한 계층의 사람들을 고려한 디자인이 흥미로웠다. 애플이 늘 잘하던 분야였고 이번에도 역시 기대를 저버리지 않았다. 역시 디자이너는 “디자인”을 하는 사람이지 “아트”를 하는 사람은 아니니까.</li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>강의 복습과 정리</li><li>Vue.js</li><li>다른 웹서비스 메인페이지 따라 만들어보기</li><li>시험 복습</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fastcampus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity&lt;ul&gt;
&lt;li&gt;자습: 
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170920-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/20/170920-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/20/170920-TIL/</id>
    <published>2017-09-20T08:18:54.000Z</published>
    <updated>2017-09-21T00:34:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>Fastcampus</p><ul><li>Activity<ul><li>자습: 일과계획 정리</li></ul></li><li><p>HTML &amp; CSS</p><ul><li><code>&lt;footer&gt;</code>는 제목(헤딩태그 <code>&lt;h1&gt;..&lt;h6&gt;</code>)을 갖지 않는다.</li><li><code>&lt;address&gt;</code> footer 안에서 사용하며 주소, 연락처 등의 정보를 기입할 때 쓰며, 종종 저작권 정보를 함께 넣어주기도 한다.</li><li><p>인용구 HTML과 CSS</p><ul><li><p><code>&lt;q&gt;</code> 인용구에 쓰는 HTML5 태그</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"slogan-content"</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- q태그의 cite 속성값으로 출처를 기입한다. --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">q</span> <span class="attr">cite</span>=<span class="string">"http://w3.org/WAI/"</span>&gt;</span></div><div class="line">    The power of the Web is in its universality, Access by everyone regardless of disability is an essential aspect.</div><div class="line">  <span class="tag">&lt;/<span class="name">q</span>&gt;</span></div><div class="line">  Tim Berners - Lee , W3C Director and inventor of the World Wide Web</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- article 내부의 footer로 출처를 기재하여 스크립트화해서 이용할 수 있다.(공유하거나 퍼가거나 등등) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"readable-hidden"</span>&gt;</span>출처 : WAI - http://w3.org/WAI/<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p><code>&lt;q&gt;</code>태그를 쓰게 되면 자동으로 인용구 앞뒤로 <code>&quot;</code>가 붙게 되는데 CSS 속성 <code>quote:&quot;[인용구 앞에 들어갈 문구]&quot; &quot;[인용구 뒤에 들어갈 문구]&quot;</code> 를 통해 수정 가능</p></li></ul></li><li><p>CSS의 구체성 이슈</p><ul><li>세부 속성값을 정하는 속성의 경우엔 아래 재정의했다고 하더라도 해당 세부 속상만이 변경될 뿐 본 속성 자체가 무시되지 않는다.<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.div</span> &#123;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#ccc</span> <span class="built_in">linear-gradient</span>(to bottom, #eee, #ccc);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.div</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: pink;</div><div class="line">&#125;</div><div class="line"><span class="comment">/* 코드는 위에서 아래로 읽어나기 때문에 항상 뒤에 적힌 코드를 적용하기 때문에, 이 경우 앞의 .background가 .background-color에 의해 무시된다고 생각하기 쉽다.  */</span></div><div class="line"><span class="comment">/* 따라서 본 코드는 backgrond의 color 속성을 pink로 바꿔준 것일 뿐이고 linear-gradient는 그대로 남아 적용된다.(전자의 background의 color 속성값은 그라디언트를 지원하지 않는 환경일 때 나타나는 배경색을 의미.) */</span></div></pre></td></tr></table></figure></li></ul></li><li><p><code>font</code> 속성 정리</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.div</span> &#123;</div><div class="line">  <span class="attribute">font-weight</span>: bold;</div><div class="line">  <span class="attribute">font-style</span>: italic;</div><div class="line">  <span class="comment">/* 대문자 자체는 유지하되 크기를 소문자 크기로 줄여주는 기능 */</span></div><div class="line">  <span class="attribute">font-variant</span>: small-caps;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</div><div class="line">  <span class="attribute">font-family</span>: <span class="string">"Noto Sans Bold"</span>;</div><div class="line"></div><div class="line">  <span class="comment">/* 속기법 순서유의 */</span></div><div class="line">  <span class="comment">/* font: weight | style | variant | size / height | font-family */</span></div><div class="line">  <span class="attribute">font</span>: bold italic small-caps <span class="number">16px</span> / <span class="number">1.5</span> <span class="string">"Noto Sans Bold"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p><code>transition</code> 속성 정리</p><ul><li><code>@keyframe</code>보다 훨씬 쉽게 애니메이션 효과를 줄 수 있는 속성<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.div</span> &#123;</div><div class="line">    <span class="comment">/* 적용할 속성명 */</span></div><div class="line">    <span class="attribute">transition-property</span>: all;</div><div class="line">    <span class="comment">/* 지속 시간 */</span></div><div class="line">    <span class="attribute">transition-duration</span>: <span class="number">0s</span>;</div><div class="line">    <span class="comment">/* 애니메이션 동작 효과 */</span></div><div class="line">    <span class="attribute">transition-timing-function</span>: ease;</div><div class="line">    <span class="comment">/* 효과 지연 시간 */</span></div><div class="line">    <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</div><div class="line"></div><div class="line">    <span class="comment">/* 속기법 */</span></div><div class="line">    <span class="comment">/* transition: property name | duration | timing function | delay */</span></div><div class="line">    <span class="attribute">transition</span>: margin-left <span class="number">4s</span> ease-in-out <span class="number">1s</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul></li><li><p><code>ol</code>의 <code>li</code> 숫자 커스터마이징 방식: li 숫자를 직접 고치고 커스텀하는 방법은 없다.</p><ol><li><code>list-style-type: none</code> : 스크립트 리더가 읽어주지 못해 접근성이 떨어지는 방식</li><li><code>overflow: hidden</code> 활용 : 추천 방식, 숫자 입력시 <code>counter-increment</code> 속성 활용</li></ol></li><li>수직 가운데 배열하기<ul><li><code>transform</code> 속성 활용</li></ul></li></ul></li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li><code>@keyframe</code>으로 하면 코드도 길고 복잡해지는데 <code>transition</code>으로 하니까 매우 간단하게 구현할 수 있다. 회전이나 여러 다른 속성도 있다고 하니 꼭 챙겨봐야겠다. 편하지만 복잡한 애니메이션은 역시 <code>@keyframe</code>이나 JavaScript에서 구현 가능할 것 같다.</li><li>언뜻 보기에는 <code>background-color</code>가 더 복잡해보이지만 그저 <code>background</code>의 세부 속성 중 하나일 뿐…</li><li>할 일을 써놓고 실천을 하지 못하는 날이 잦다. 목표를 줄이든지, 실천을 늘리든지 하나만 하자</li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>강의 복습과 정리</li><li>이전 과제들 정리</li><li>grid 복습 정리하고 적용해보기</li><li>Vue.js</li><li>다른 웹서비스 메인페이지 따라 만들어보기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fastcampus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity&lt;ul&gt;
&lt;li&gt;자습: 
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170919-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/19/170919-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/19/170919-TIL/</id>
    <published>2017-09-19T13:41:23.000Z</published>
    <updated>2017-09-20T13:09:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>Fastcampus</p><ul><li>Activity<ul><li>9월 15일 과제 해설(음수마진, 9개의 정사각형 배치)</li></ul></li><li>HTML &amp; CSS<ul><li>IR기법(Image Replacement)<ol><li><code>overflow:hidden</code>과 <code>box-sizing: border-box</code> 활용</li><li><code>&lt;span&gt;</code> 활용</li><li>sprite 기법: 이미지와 <code>background-position</code> 활용</li></ol><ul><li>참고<ul><li>Web standard Darum <a href="http://ui.daum.net/convention/css/css_ir" target="_blank" rel="external">http://ui.daum.net/convention/css/css_ir</a></li><li>NULI <a href="http://nuli.navercorp.com/sharing/blog/post/1132804" target="_blank" rel="external">http://nuli.navercorp.com/sharing/blog/post/1132804</a></li><li>유니버설 디자인을 위한 실전 UI(HTML/CSS)개발 가이드 <a href="http://naradesign.net/open_content/lecture/wp/#section20" target="_blank" rel="external">http://naradesign.net/open_content/lecture/wp/#section20</a></li></ul></li></ul></li><li>폰트 단위 <code>em / rem / px / %</code></li><li><code>line-height</code></li><li><a href="http://fontawesome.io" target="_blank" rel="external">font awesome</a></li></ul></li><li><p>WAI-ARIA</p><ul><li>Web Accessibility Initiative Accessible Rich Internet Applications</li><li>웹 접근성</li><li><p>규칙</p><ul><li><p>ARIA 역할과 HTML5 요소를 중복하지 않는다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 올바른 경우  --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">"navigation"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 올바르지 않은 경우 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">role</span>=<span class="string">"navigation"</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>요소 기능의 변경은 제한된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- h1의 기능은 heading이지 button이 아니다. --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>키보드 사용 보장해야 한다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">tabindex</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>적절한 레이블을 제공해야 한다.</p></li></ul></li><li>참고자료<ul><li>WCAG 가이드라인 : <a href="http://www.w3c.or.kr/Translation/WCAG20/" target="_blank" rel="external">http://www.w3c.or.kr/Translation/WCAG20/</a></li><li>한국형 웹컨텐츠 접근성지침 : <a href="http://wah.or.kr" target="_blank" rel="external">http://wah.or.kr</a></li><li>적용사례연집 : <a href="http://wah.or.kr/board/boardView.asp?page=1&amp;brd_sn=5&amp;brd_idx=1019" target="_blank" rel="external">http://wah.or.kr/board/boardView.asp?page=1&amp;brd_sn=5&amp;brd_idx=1019</a></li><li>개요 및 인증심사 방안 : <a href="https://github.com/seulbinim/aria" target="_blank" rel="external">https://github.com/seulbinim/aria</a></li></ul></li></ul></li></ul></li><li>웹서비스 메인페이지 따라 만들기<ul><li><a href="https://github.com/girin-dev/practice_others" target="_blank" rel="external">watcha</a><ul><li>today-boxoffice-list 마크업</li></ul></li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>WAI-ARIA를 공부하며 접근성이라는 웹의 정신을 다시금 떠올렸다. 디자이너는 서비스와 상품을 적절히 디자인하는 것이지 예술을 하는게 아니라는 점이 인상적이었다.</li><li>ir기법 중 sprite에 대해 확실히 공부했다. 다른 방법도 더 찾아봐야겠다.</li><li><a href="http://nuli.navercorp.com/sharing/blog/post/1132804" target="_blank" rel="external">title 속성에 대한 국내 표준과 해외 표준이 다른건가?</a> 데레사님께 여쭤봐야겠다.</li><li>마크업이 정말 어렵다. 모호한 기능이나 어떤 태그로 처리해야 할지 모를때가 많다. 그냥 모르겠으면 <code>div</code>로 처리하고 있는데 이게 맞는지 모르겠다. <code>span</code>을 써야할지 <code>p</code>를 써야할지 <code>div</code>를 써야할지 헷갈릴때도 많고 무엇보다 시멘틱 마크업 태그를 전부 알지 못하는 게 큰 것 같다.</li><li>의외로 카페에서 공부가 잘 된다.</li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>강의 복습과 정리</li><li>이전 과제들 정리</li><li>grid 복습 정리하고 적용해보기</li><li>Vue.js</li><li>다른 웹서비스 메인페이지 따라 만들어보기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fastcampus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity&lt;ul&gt;
&lt;li&gt;9월 1
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170918-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/18/170918-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/18/170918-TIL/</id>
    <published>2017-09-18T08:35:47.000Z</published>
    <updated>2017-09-19T01:01:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>Fastcampus</p><ul><li>Activity</li><li><p>HTML &amp; CSS</p><ul><li>group2의 notice, pds, news 제작</li><li><p><code>&lt;time&gt;</code> 시간을 나타내는 HTML 태그</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datatime</span>=<span class="string">"2017-09-18T17:35:47"</span>&gt;</span>2017.09.18<span class="tag">&lt;/<span class="name">time</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p><code>&lt;figure&gt;</code> 설명을 나타내는 HTML 태그</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">figure</span> <span class="attr">class</span>=<span class="string">"[클래스명]"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"[이미지 주소]"</span> <span class="attr">alt</span>=<span class="string">"[대체 텍스트]"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>설명<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>inline요소와 block요소(<a href="http://pshweb.tistory.com/entry/블록요소와-인라인요소" target="_blank" rel="external">참고</a>)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>inline 요소인 a태그 안에 block요소인 div를 넣으면 문법오류<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">style</span>=<span class="string">"display: inline-block;"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>a태그의 display 속성값을 block이나 inline-block으로 바꾸면 가능하나 권장하지 않음.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p><code>text-overflow</code> 일반적으로 같이 쓰이는 CSS 코드</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;</div><div class="line"><span class="comment">/* 줄바꿈 차단: inline요소가 블록을 넘어가도 줄바꿈을 하지 않음*/</span></div><div class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</div><div class="line"><span class="comment">/* 블록을 넘어간 요소를 invisible 처리함 */</span></div><div class="line"><span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</div><div class="line"><span class="comment">/* overflow:hidden;을 통해 invisible 처리된 내용을 말줄임으로 바꿈 */</span></div></pre></td></tr></table></figure></li><li><p><code>on( ) method</code> 멀티 이벤트를 가능하게 하는 jquery method</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">tab.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="keyword">this</span>).parent().addClass(<span class="string">'board-active'</span>).siblings().removeClass(<span class="string">'board-active'</span>);</div><div class="line">&#125;);</div><div class="line">tab.focusin(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="keyword">this</span>).parent().addClass(<span class="string">'board-active'</span>).siblings().removeClass(<span class="string">'board-active'</span>);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 위 두 코드를 아래처럼 하나로 표현 가능</span></div><div class="line">tab.on(<span class="string">'click focusin'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="keyword">this</span>).parent().addClass(<span class="string">'board-active'</span>).siblings().removeClass(<span class="string">'board-active'</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure></li></ul></li><li><p>기타</p><ul><li>jquery의 css속성은 가급적 쓰지 말 것.</li><li>(CSS)클릭 속성 부여 <code>cursor: pointer;</code></li><li>Hiring이나 프로젝트에서 모듈화는 중요.</li></ul></li></ul></li><li>Grid 학습<ul><li><a href="http://cssgridgarden.com/#ko" target="_blank" rel="external">gridgarden</a> 클리어</li></ul></li><li>과제<ul><li>group2의 notice, pds 복습 <a href="https://github.com/girin-dev/homework/tree/master/170918" target="_blank" rel="external">Github</a></li></ul></li><li>Vue.js<ul><li>상-하위 컴포넌트 간 데이터 전달 방법</li><li>props</li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>여전히 시멘틱 마크업이 부족하다. 꼭 빼먹는 태그 한 두개씩 있거나 논리적인 구조를 짜는데 어려움을 겪는다.</li><li>오늘 한 일에 코드를 많이 넣어봤는데 이 방법이 더 나은 것 같다.</li><li>jquery가 조금 손에 익는 듯 하다.</li><li>HTML과 CSS는 배울수록 느끼는 것이지만 세부적인 규칙이 많고, 구현 방법이 정말 다양하다. 이건 프론트엔드를 어렵게 만들기도 하고 더 매력적으로 만들기도 하는 것 같다.</li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>강의 복습과 정리</li><li>이전 과제들 정리</li><li>gird 복습 정리하고 적용해보기</li><li>Vue.js</li><li>다른 웹서비스 메인페이지 따라 만들어보기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fastcampus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170916~170917-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/17/170916-170917-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/17/170916-170917-TIL/</id>
    <published>2017-09-17T08:03:22.000Z</published>
    <updated>2017-09-17T16:54:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="주말동안-한-일"><a href="#주말동안-한-일" class="headerlink" title="주말동안 한 일"></a>주말동안 한 일</h2><ul><li>Fastcampus<ul><li>과제<ul><li>음수마진(negative margin)</li><li>margin-left, margin-top / margin-right, margin-bottom</li></ul></li><li>주제별 정리<ul><li>Computer Science</li><li>Web의 역사와 정신</li><li>시멘틱 마크업 HTML</li><li>CSS</li><li>Jquery</li></ul></li></ul></li><li><p>웹서비스 메인페이지 따라 만들기</p><ul><li>the-edit : 패캠 이전에 만들던 것</li><li>Watcha<br><a href="https://github.com/girin-dev/practice_others" target="_blank" rel="external">https://github.com/girin-dev/practice_others</a></li></ul></li><li><p>Vue.js</p><ul><li>전역, 지역컴포넌트 실습<br><a href="https://github.com/girin-dev/learnVuejs" target="_blank" rel="external">https://github.com/girin-dev/learnVuejs</a></li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>아래에 있는 4~5번 블록을 올리는 건 알겠는데 이미 최상단에 있는 1번같은 블록을 내리는 법을 모르겠음.</li><li>Watcha 메인 페이지 만들기를 시작하면서 알게 된 두 가지.<ol><li>Watcha가 시멘틱마크업으로 짜여져 있지 않다.</li><li>왜 김데레사님이 시멘틱마크업이 가장 어렵다고 한 것인지 알게 되었다.</li></ol></li><li>주제별 정리해서 하나씩 하나씩 블로그에 올려야지. 다른 스쿨분들의 정리 내용도 참고해야겠다.</li><li>블로그 css를 고치고 route를 추가해보려 했으나 ul의 padding값을 조정하는데에 그쳤다. 이것도 막상 하려고 하니 큰 작업이다.</li><li>MDN 문서 번역 기여를 시도해보았다.</li><li><a href="https://forms.office.com/Pages/ResponsePage.aspx?id=oBzDhDusrk6tEVGdgCM-b2s3e0qjN_hKi1ZVQ0d5AuFURDIzVFlDUEM3V0NKQVMxUTUzWUZIWTNBNy4u" target="_blank" rel="external">주말에 끝내는 챗봇</a>과 <a href="https://2017.feconf.kr/" target="_blank" rel="external">프론트엔드 컨퍼런스 코리아</a>에 참여신청을 했다.</li></ul><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>패캠강의 복습 및 정리</li><li>이전 과제 분석</li><li>왓챠와 디에디트 진행</li><li>Vue.js 강의</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;주말동안-한-일&quot;&gt;&lt;a href=&quot;#주말동안-한-일&quot; class=&quot;headerlink&quot; title=&quot;주말동안 한 일&quot;&gt;&lt;/a&gt;주말동안 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Fastcampus&lt;ul&gt;
&lt;li&gt;과제&lt;ul&gt;
&lt;li&gt;음수마진(negat
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170915-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/15/170915-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/15/170915-TIL/</id>
    <published>2017-09-15T08:26:42.000Z</published>
    <updated>2017-09-17T06:37:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>Fastcampus</p><ul><li>Scrum<ul><li>1주일간 배운 바를 정리, 공유</li></ul></li><li><p>HTML &amp; CSS</p><ul><li>title과 alt의 차이와 활용 예시(약도)</li><li>margin의 겹침 이슈</li><li><p>용어 정의 태그</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span> <span class="comment">&lt;!-- 용어 정의 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span> <span class="comment">&lt;!-- 용어 이름 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span> <span class="comment">&lt;!-- 용어 설명 --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>Vertical rhythm</p></li><li>flex-fieldset과 webkit 기반 브라우저 버그</li><li>vertical-align</li><li>calc() 에서 빼기 연산할 때 띄어쓰기 유의</li><li><a href="https://github.com/girin-dev/seulbinim.github.io/commits/master" target="_blank" rel="external">실습 내용</a></li></ul></li></ul></li><li>Vue.js<ul><li>Vue 컴포넌트의 정의와 문법</li><li>전역 컴포넌트, 지역 컴포넌트</li></ul></li></ul><h2 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h2><ul><li>레이아웃을 짜는데 조금씩 자신감이 붙었다. 아직 자세한 차이까지는 모르지만 주말동안 배운 내용을 정리하고 실습 응용하면서 확실히 해야지.</li><li>저번에 배운 구조선택자를 다시 한번 복습해야겠다. nth-child() 이 괄호 안에 1,2,3 말고도 다양한 타입이 들어갈 수 있으니 연습해보자.</li><li>css 애니메이션 연습하기</li><li>글씨의 위아래 배치공간에 대한 연습</li></ul><h2 id="주말동안-할-일"><a href="#주말동안-할-일" class="headerlink" title="주말동안 할 일"></a>주말동안 할 일</h2><ul><li>주제별 내용 정리</li><li>블로그 css 손보고 route 알아보기</li><li>오픈소스 기여에 대해 생각해보기</li><li>다른 웹서비스 메인페이지 따라 만들어보기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fastcampus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scrum&lt;ul&gt;
&lt;li&gt;1주일간 배운
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170914-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/14/170914-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/14/170914-TIL/</id>
    <published>2017-09-14T04:57:42.000Z</published>
    <updated>2017-09-15T09:03:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li><p>Fastcampus FDS 6기(HTML&amp;CSS)</p><ul><li>Activity : 자습시간. 어제 못다한 TIL 작성과 계획 작성</li><li><p>HTML &amp; CSS</p><ul><li>background</li><li>animation</li><li>nth-child</li><li>form의 필수 3요소<ol><li>form</li><li>fieldset - form 영역임을 알려주는 그룹 태그</li><li>legend - form의 이름을 지정해주는 태그</li></ol></li><li>input<ul><li>input-label 또는 input title=””</li><li>크로스 브라우징에 특히 신경써야 하는 부분</li></ul></li></ul></li><li><p><a href="https://github.com/girin-dev/seulbinim.github.io/commits/master" target="_blank" rel="external">실습 내용</a></p></li><li><a href="https://github.com/girin-dev/homework/tree/master/170914" target="_blank" rel="external">170914  과제</a></li></ul></li><li><p>Vue.js</p><ul><li>환경설정</li><li>Vue 시작, MVVM패턴</li><li>인스턴스와 Vue 라이프싸이클</li><li><a href="https://github.com/girin-dev/learnVuejs" target="_blank" rel="external">https://github.com/girin-dev/learnVuejs</a></li></ul></li></ul><h1 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h1><ul><li>김데레사님과 나의 차이점<ul><li>김데레사님은 코딩 전에 디자인 맵(손으로 그린 계획도)을 짜고, 큰 얼개부터 css 작업을 시작함. 다양한 태그 활용.</li><li>반면 나는 디자인 맵이고 뭐고 바로 코딩 들어가고, 손대기 쉬운 조그만 것(input의 width 같은 것)부터 css작업을 시작함.</li><li>어렵고 잘 몰라도 그냥 디자인 맵 그리는 연습과 큰 그림부터 잡아가는 연습을 하자.</li></ul></li><li>MDN 도큐먼트들을 보니 아직 한국어로 번역되지 않은 부분이 많았다. 오픈소스 개발에 참여하고 싶은데 번역부터 시작해도 괜찮을 것 같다.</li><li>로그인 요소를 직접 만들며 알아간다는 느낌이 많이 든다.</li><li>Atom Editor 시작할 때 등장하는 welcome탭을 설정으로 비활성화 시켰다. <a href="http://naradesign.net/wp/2016/10/12/2212/" target="_blank" rel="external">http://naradesign.net/wp/2016/10/12/2212/</a></li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>Activity</li><li>수업 복습 및 정리</li><li>과제</li><li>12,13일 과제-조교님 답안과 비교</li></ul><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://medium.com/@codesquad_yoda/웹-프론트엔드-개발자-어떻게-준비해야-할까-5ac7bb6ff2a9" target="_blank" rel="external">웹 프론트엔드 개발자, 어떻게 준비해야 할까? - 윤지수(코드스쿼드)</a></li><li><a href="https://www.w3schools.com/html/html5_semantic_elements.asp" target="_blank" rel="external">시멘틱 마크업</a></li><li><a href="http://wit.nts-corp.com/2015/04/16/3538" target="_blank" rel="external">네이밍 방법론(BEM 등)</a></li><li><a href="https://codepen.io/-__-/pen/NxMpGq?q=form%20animation&amp;limit=all&amp;order=popularity&amp;depth=everything&amp;show_forks=false" target="_blank" rel="external">CSS을 활용한 애니메이션들 - codepen</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fastcampus FDS 6기(HTML&amp;amp;CSS)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170913-TIL</title>
    <link href="http://girin-dev.github.io/2017/09/13/170913-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/13/170913-TIL/</id>
    <published>2017-09-13T01:04:10.000Z</published>
    <updated>2017-09-14T09:30:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>Fastcampus FDS 6기(HTML&amp;CSS)<ul><li>Activity : 하노이의 탑 마무리</li><li>공통 &amp; 시멘틱 마크업<ul><li>시멘틱 마크업을 하는 이유</li><li>논리적 구조 설계의 방법론</li><li>enter와 공백 이슈</li><li>변수, 함수 등의 네이밍에서 자신만의 규칙 만들기</li></ul></li><li>HTML &amp; CSS<ul><li>논리적으로 의미가 있지만 디자인적으로 보이지 말아야 할 요소 처리(invisible things)</li><li>버튼 등 클릭요소에 사용자 편의성 높이기</li><li>enter와 공백 이슈</li><li>position, font, line-height, text-shadow, outline, white-space, inline-block,   ::before/::after</li><li>inline과 부모의 사이즈의 상관관계</li><li>icon font의 활용</li><li>CSS를 활용한 애니메이션 효과(key-frame)과 크롬의 performance check</li><li>jquery 맛보기: focusin(), focusout(), hover()</li></ul></li><li>복습 과제</li><li><a href="https://github.com/girin-dev/seulbinim.github.io" target="_blank" rel="external">수업내용</a>, <a href="https://github.com/girin-dev/homework/tree/master/170913" target="_blank" rel="external">과제 170913</a></li></ul></li></ul><h1 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h1><ul><li>하노이의 탑<ul><li>조교님께서 엑셀을 이용한 힌트를 알려주셨다. 한 번 시간내서 재도전해봐야겠다.</li></ul></li><li>지하철을 타고 집에 가다가 과제에 대한 해결 방법(jquery)이 번뜩나서 그 자리에서 맥북을 켜서 해결했다. 뭔가 버려지는 시간을 현명하게 활용한 것 같아서 기분이 좋았다.</li><li>Vue.js 공부를 하지 못했다. 어제 애플 키노트를 보느라 밤을 새서 그런지 피곤해서 그런지 잠들어 버렸다. 다음부턴 빼놓지 말고 하자.</li><li>md(MarkDown)문서는 Atom Editor로 작성하고 있는데 켤 때마다 자꾸 Welcome탭 같은 쓸데없는게 나온다. 귀찮은데. 빨리 고쳐야지.</li><li>기술을 배우러 와서 이론만 공부하는 느낌이다.(가르쳐주는게 그렇다는게 아니라 내 공부가.) 스스로 복습하고 응용하는 연습을 더 많이 해야겠다.</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>Activity</li><li>Fastcampus FDS 수업 + 과제</li><li>Vue.js 30분</li><li>수업 정리</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Fastcampus FDS 6기(HTML&amp;amp;CSS)&lt;ul&gt;
&lt;li&gt;Activity
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>170912_TIL</title>
    <link href="http://girin-dev.github.io/2017/09/13/170912-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/13/170912-TIL/</id>
    <published>2017-09-12T17:55:07.000Z</published>
    <updated>2017-09-16T14:31:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>드디어 github.io 블로그를 만들었다.<ul><li>테마는 그나마 깔끔해보이는 <a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="external">hexo-theme-apollo</a>로 만들었다. 유저네임을 정하고 템플릿 고르는데 가장 많은 시간이 걸렸다.</li><li>그런데 Category나 Tag, About이 없어서 새로 만들든가 아니면 테마를 바꿔야 할지도 모르겠다. 썩 맘에 들지는 않는 템플릿…</li><li>그래도 이 블로그로 꾸준하게 TIL을 적는게 목표. 그 목표를 잘 지키면 진짜 기술 블로그처럼 만들고 싶다.</li><li>초보몽키(LEE HYUNJOO)님의 <a href="https://wayhome25.github.io/" target="_blank" rel="external">개발공부로그</a>를 많이 참고했고, 앞으로도 많이 참고할 것이고, 초보몽키님처럼 열심히 공부하고 기록하는게 목적이다.</li></ul></li><li>Fastcampus FDS 6기<ul><li>Activity : 하노이의 탑, 알고리즘</li><li>HTML&amp;CSS<ul><li>레이아웃(flex/grid/float)</li><li>세부 마크업과 디자인, CSS 3대 이슈(겹침, 상속, 우선순위-구체성)</li><li>position</li><li>과제</li></ul></li><li>커리어 특강 : 스타트업에 대해 좀 더 알아봐야겠다. Fastcampus가 큰 도움이 되었으면 좋겠다.</li></ul></li><li>Inflearn의 <a href="https://www.inflearn.com/course/vue-pwa-vue-js-%EA%B8%B0%EB%B3%B8/" target="_blank" rel="external">Vue.js</a> 수강 계획을 짰다.<ul><li>장기효(캡틴판교)님의 강의인데 사실 패캠의 캠프 과정 중 하나라는 말에 끌린 듯 신청했다.</li><li>Vue.js 라는 프레임워크의 기초라서 천천히 들어보면 나중에 도움이 될 듯 싶다.</li><li>하루에 30분씩 투자하고 정리하자.</li></ul></li><li>애플의 키노트를 보면서 쓰는 중<ul><li>애플워치, 애플TV, 아이폰8도 좋지만…</li><li>아이폰X가 훨씬 기대된다.</li><li>One more thing…</li></ul></li></ul><h1 id="느낀-점"><a href="#느낀-점" class="headerlink" title="느낀 점"></a>느낀 점</h1><ul><li>하노이의 탑(알고리즘)은 너무 어렵다. 재귀함수가 나중에 많이 쓰인다고 하니 더 걱정이 된다. 더 공부하고 생각해야겠다.</li><li>논리적 마크업과 디자인적 배치는 별개라는 점.</li><li>Flex는 기존의 float과 position을 활용해서 레이아웃을 짤 때보다 훨씬 쉽고 강력한 것 같다. 다만 뭔가 컴퓨터가 알아서 해주거나 상대적인 위치를 짜주는게 많아서 약간 찜찜하다. 어서 한국 개발환경에서도 많이 보급되었으면 좋겠다.</li><li>마크다운 작성은 여전히 익숙치 않은데 쓰다보니 은근히 재미있다.</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>Activity</li><li>Fastcampus FDS 수업 + 과제</li><li>Vue.js 30분</li><li>수업 정리</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;드디어 github.io 블로그를 만들었다.&lt;ul&gt;
&lt;li&gt;테마는 그나마 깔끔해보이는 
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
  <entry>
    <title>TIL을 시작하다.</title>
    <link href="http://girin-dev.github.io/2017/09/13/start-TIL/"/>
    <id>http://girin-dev.github.io/2017/09/13/start-TIL/</id>
    <published>2017-09-12T17:42:35.000Z</published>
    <updated>2017-09-12T17:49:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TIL을-시작하다"><a href="#TIL을-시작하다" class="headerlink" title="TIL을 시작하다."></a>TIL을 시작하다.</h1><p>오늘 배운 것을 정리한다.<br>처음 개발을 배웠을 때나 Fastcampus의 FDS 과정의 첫 주에 대해서도 적어보려고 한다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TIL을-시작하다&quot;&gt;&lt;a href=&quot;#TIL을-시작하다&quot; class=&quot;headerlink&quot; title=&quot;TIL을 시작하다.&quot;&gt;&lt;/a&gt;TIL을 시작하다.&lt;/h1&gt;&lt;p&gt;오늘 배운 것을 정리한다.&lt;br&gt;처음 개발을 배웠을 때나 Fastcamp
      
    
    </summary>
    
      <category term="TIL" scheme="http://girin-dev.github.io/categories/TIL/"/>
    
    
      <category term="TIL(Today I Learned)" scheme="http://girin-dev.github.io/tags/TIL-Today-I-Learned/"/>
    
  </entry>
  
</feed>
